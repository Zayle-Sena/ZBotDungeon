package Bot;

import classes.Core.Room;
import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Graphics;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import net.dv8tion.jda.core.entities.Game;
import net.dv8tion.jda.core.entities.Message;
import net.dv8tion.jda.core.entities.PrivateChannel;
import net.dv8tion.jda.core.entities.TextChannel;
import net.dv8tion.jda.core.entities.User;

/**
 *
 * @author PC
 */
public class MainFrame extends javax.swing.JFrame {
        
    DefaultListModel mdlTextChannels;
    DefaultListModel mdlUsers;
    DefaultComboBoxModel mdlFloors;
    int messageCount = 0;
    MapCanvas mapCanvas;
    
    
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        ImageIcon img = new ImageIcon("icon.png");
        this.setIconImage(img.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        dlgMap = new javax.swing.JDialog();
        btnStart = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtConsole = new javax.swing.JTextArea();
        lblStatus = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        txtStatus = new javax.swing.JTextField();
        btnPlaying = new javax.swing.JButton();
        btnWatching = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstChannels = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtMessage = new javax.swing.JTextArea();
        btnSend = new javax.swing.JButton();
        cbxType = new javax.swing.JComboBox<>();
        btnShow = new javax.swing.JButton();
        cbxFloor = new javax.swing.JComboBox<>();
        lblFloor = new javax.swing.JLabel();
        btnMap = new javax.swing.JButton();

        jScrollPane2.setViewportView(jEditorPane1);

        dlgMap.setSize(new java.awt.Dimension(900, 900));

        javax.swing.GroupLayout dlgMapLayout = new javax.swing.GroupLayout(dlgMap.getContentPane());
        dlgMap.getContentPane().setLayout(dlgMapLayout);
        dlgMapLayout.setHorizontalGroup(
            dlgMapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        dlgMapLayout.setVerticalGroup(
            dlgMapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ZBot Control Panel");

        btnStart.setText("Start");
        btnStart.setName(""); // NOI18N
        btnStart.setNextFocusableComponent(btnStop);
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnStop.setText("Stop");
        btnStop.setEnabled(false);
        btnStop.setNextFocusableComponent(btnStart);
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        jScrollPane1.setAutoscrolls(true);

        txtConsole.setEditable(false);
        txtConsole.setColumns(20);
        txtConsole.setLineWrap(true);
        txtConsole.setRows(5);
        jScrollPane1.setViewportView(txtConsole);

        lblStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStatus.setText("ZBot on standby.");

        lblTitle.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        lblTitle.setText("ZBot Control Panel");

        btnPlaying.setText("Set Playing");
        btnPlaying.setEnabled(false);
        btnPlaying.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayingActionPerformed(evt);
            }
        });

        btnWatching.setText("Set Watching");
        btnWatching.setEnabled(false);
        btnWatching.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWatchingActionPerformed(evt);
            }
        });

        lstChannels.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        lstChannels.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstChannels.setNextFocusableComponent(txtMessage);
        jScrollPane3.setViewportView(lstChannels);

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        txtMessage.setColumns(20);
        txtMessage.setRows(1);
        txtMessage.setNextFocusableComponent(btnSend);
        jScrollPane4.setViewportView(txtMessage);

        btnSend.setText("Send");
        btnSend.setEnabled(false);
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        cbxType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Text Channels", "Users" }));
        cbxType.setEnabled(false);
        cbxType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTypeActionPerformed(evt);
            }
        });

        btnShow.setText("Show Channel");
        btnShow.setEnabled(false);
        btnShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowActionPerformed(evt);
            }
        });

        cbxFloor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0" }));
        cbxFloor.setEnabled(false);
        cbxFloor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxFloorActionPerformed(evt);
            }
        });

        lblFloor.setText("Floor:");

        btnMap.setText("Show Map");
        btnMap.setEnabled(false);
        btnMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMapActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnStart, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbxType, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnShow)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSend))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnPlaying)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnWatching))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(lblTitle)
                                        .addGap(189, 189, 189))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(lblFloor)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addComponent(cbxFloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnMap)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblTitle)
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbxFloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFloor)
                            .addComponent(btnMap))
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPlaying)
                    .addComponent(btnWatching)
                    .addComponent(cbxType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnShow)
                            .addComponent(btnSend))
                        .addGap(16, 16, 16)
                        .addComponent(lblStatus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        btnStart.getAccessibleContext().setAccessibleName("btnStart");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        String result = Main.connect();
        if (result.equals("ZBot online!")) {
            lblStatus.setText(result);
        }
        printToConsole(result);
        btnStop.setEnabled(true);
        btnPlaying.setEnabled(true);
        btnWatching.setEnabled(true);
        btnSend.setEnabled(true);
        btnShow.setEnabled(true);
        cbxType.setEnabled(true);
        cbxFloor.setEnabled(true);
        btnMap.setEnabled(true);
        
        btnStart.setEnabled(false);
        
        mdlTextChannels = new DefaultListModel();
        mdlUsers = new DefaultListModel();
        mdlFloors = new DefaultComboBoxModel();
        
        for (String s : Main.getChannels()) {
            mdlTextChannels.addElement(s);
        }
        
        for (String s : Main.getUsers()) {
            mdlUsers.addElement(s);
        }
        
        for (int i = 0; i < Main.connection.commandListener.game.Map[1].length; i++){
            mdlFloors.addElement(i + 1);
        }
        
        cbxFloor.setModel(mdlFloors);
               
        refreshChannels();
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        String result = Main.stop();
        if (result.equals("ZBot stopped.")) {
            lblStatus.setText(result);
        }
        printToConsole(result);
        btnStart.setEnabled(true);
        
        btnStop.setEnabled(false);
        btnPlaying.setEnabled(false);
        btnWatching.setEnabled(false);
        btnSend.setEnabled(false);
        btnShow.setEnabled(false);
        cbxType.setEnabled(false);
        cbxFloor.setEnabled(false);
        btnMap.setEnabled(false);
        
        mdlTextChannels.clear();
        
    }//GEN-LAST:event_btnStopActionPerformed

    private void btnPlayingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayingActionPerformed
        Main.connection.getJDA().getPresence().setPresence(Game.playing(txtStatus.getText()), true);
        this.printToConsole("Status set to: \"Playing " + txtStatus.getText() + "\"");
        txtStatus.setText("");
        txtStatus.setEnabled(false);
        txtStatus.setEnabled(true);
    }//GEN-LAST:event_btnPlayingActionPerformed

    private void btnWatchingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWatchingActionPerformed
        Main.connection.getJDA().getPresence().setPresence(Game.watching(txtStatus.getText()), true);
        this.printToConsole("Status set to: \"Watching " + txtStatus.getText() + "\"");
        txtStatus.setText("");
        txtStatus.setEnabled(false);
        txtStatus.setEnabled(true);
    }//GEN-LAST:event_btnWatchingActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        if (cbxType.getSelectedItem().toString().equals("Users")) {
            Main.sendUserMessage(txtMessage.getText(), lstChannels.getSelectedValue());
        } else {
            Main.sendChannelMessage(txtMessage.getText(), lstChannels.getSelectedValue());
        }
        txtMessage.setText("");
    }//GEN-LAST:event_btnSendActionPerformed

    private void cbxTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTypeActionPerformed
        refreshChannels();
    }//GEN-LAST:event_cbxTypeActionPerformed

    private void btnShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowActionPerformed
        txtConsole.setText("");
        if (cbxType.getSelectedItem().toString().equals("Users")) {
            //If selecting a Users private channel
            User user = Main.getUser(lstChannels.getSelectedValue());
            PrivateChannel channel = user.openPrivateChannel().complete();
            
            for (Message message : channel.getHistory().retrievePast(100).complete()) {
                String s = txtConsole.getText();
                txtConsole.setText("\n[" + message.getAuthor().getName() + "]: \t" + message.getContent() + s);
            }
            
            //If selecting a Text Channel
        } else {
            TextChannel channel = Main.getChannel(lstChannels.getSelectedValue());
            
            for (Message message : channel.getHistory().retrievePast(100).complete()) {
                String s = txtConsole.getText();
                txtConsole.setText("\n[" + message.getAuthor().getName() + "]: \t" + message.getContent() + s);
            }
        }
    }//GEN-LAST:event_btnShowActionPerformed

    private void cbxFloorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxFloorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxFloorActionPerformed

    private void btnMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMapActionPerformed
        mapCanvas = new MapCanvas();
        mapCanvas.setPreferredSize(new Dimension(900,900));
        Container cp = dlgMap.getContentPane();
        cp.add(mapCanvas);
        mapCanvas.setSize(new Dimension(1100,1100));
        mapCanvas.setVisible(true);
        dlgMap.setVisible(true);
            
            
    }//GEN-LAST:event_btnMapActionPerformed
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMap;
    private javax.swing.JButton btnPlaying;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnShow;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStop;
    private javax.swing.JButton btnWatching;
    public static javax.swing.JComboBox<String> cbxFloor;
    private javax.swing.JComboBox<String> cbxType;
    private javax.swing.JDialog dlgMap;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblFloor;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JList<String> lstChannels;
    private javax.swing.JTextArea txtConsole;
    private javax.swing.JTextArea txtMessage;
    private javax.swing.JTextField txtStatus;
    // End of variables declaration//GEN-END:variables

public void printToConsole(String string) {
    int limit = 250;
    if (messageCount > limit) {
        txtConsole.setText("Message limit reached. (" + limit + ")\nConsole cleared.");
        messageCount = 0;
    }
    txtConsole.setText(txtConsole.getText() + string + "\n");
    messageCount += 1;
}
public void refreshChannels(){
    if (cbxType.getSelectedItem().toString().equals("Users")) {
            lstChannels.setModel(mdlUsers);
        } else {
            lstChannels.setModel(mdlTextChannels);
        }
}

public String getSelectedUserId() {
    String value = lstChannels.getSelectedValue();
    if (value == null) {
        return null;
    }
    Matcher id = Pattern.compile("\\w+(\\d+)").matcher(value);
    String user;
    
    if (id.find()) {
        user = id.group();
    } else {
        return null;
    }
    
    return user;
}
}
class MapCanvas extends JPanel{
    @Override
    public void paintComponent(Graphics g){
        super.paintComponent(g);
        Room map[][][] = Main.connection.commandListener.game.Map;
        int size = 10;
        int[] coords = {10,10};
        
        g.setColor(Color.black);
        System.out.println("Drawn Line");
        
        for (int z = 0; z < map[0][0].length ; z++){
            for (int x = 0; x < map.length; x++){
                Room room = map[x][Integer.parseInt(MainFrame.cbxFloor.getSelectedItem().toString())-1][z];
                if (!room.exitN){
                    g.drawLine(coords[0], coords[1], coords[0] + size, coords[1]);
                }
                if (!room.exitE){
                    g.drawLine(coords[0], coords[1] + size, coords[0] + size, coords[1] + size);
                }
                if (!room.exitS){
                    g.drawLine(coords[0] + size, coords[1], coords[0] + size, coords[1] + size);
                }
                if (!room.exitW){
                   g.drawLine(coords[0], coords[1], coords[0], coords[1] + size);
                }
                coords[0] += size;
                if (x == 99) {
                    coords[0] = size;
                    coords[1] += size;
                }
            }
        }
        System.out.println("Floor " + MainFrame.cbxFloor.getSelectedItem().toString() + " finished drawing");
        
    }
}

